/*!
* \file I2C.h
* \brief I2C bus manager.
* \author Ndongmo Silatsa
* \date 03-12-2022
* \version 2.0
*/

#pragma once

#include <string>
#include <cstdint>

namespace hardware {

/**
 * I2C bus manager.
 */
class I2C
{
public:
    /**
     * Open and initialize the pca9685 chip.
     * 
     * @param device device's name
     * @param address bus's address
     * @param freq_hz pulse width modulation (pwm) frequency
     */
    int open_pwm_pca9685(const std::string &device = "/dev/i2c-1", 
        int address = 0x40, const double freq_hz = 50.0);

    /**
     * Close the i2c file descriptor.
     */
    void close();

    /**
     * Set the start (on) and end (off) of the high segment of the PWM pulse on 
     * a specific channel for the pca9685 chip.
     * 
     * @param channel the channel that should be updated with the new values (0-15)
     * @param on the tick (between 0-4095) when the signal should transition from low to high
     * @param off the tick (between 0-4095) when the signal should transition from high to low
     */
    void set_pwm_pca9685(const int channel, const uint16_t on, const uint16_t off);

private:
    /**
     * Open and initialize the i2c bus.
     * @param device device's name
     * @param address bus's address
     */
    int open(const std::string& device, const uint8_t address);

    /**
     * Write the given value in the given register address.
     * @param address register address
     * @param value to write in the register
     */
    void write(const uint8_t address, const uint8_t value);

    /**
     * Read the given register address and return the data value.
     * @param address register address
     * @return the read value
     */
    uint8_t read(const uint8_t address);

    /**
     * Set the start (on) and end (off) of the high segment of the PWM pulse on 
     * a specific channel.
     * 
     * @param on the tick (between 0-4095) when the signal should transition from low to high
     * @param off the tick (between 0-4095) when the signal should transition from high to low
     * @param on_low the channel address for the on lower value (0-15)
     * @param on_high the channel address for the on higher value (0-15)
     * @param off_low the channel address for the off lower value (0-15)
     * @param off_high the channel address for the off higher value (0-15)
     */
    void set_pwm(const uint16_t on, const uint16_t off, const uint8_t on_low, 
        const uint8_t on_high, const uint8_t off_low, const uint8_t off_high);

    /**
     * Adjust the PWM frequency, which determines 
     * how many full 'pulses' per second are generated by the IC.
     * 
     * @param freq_hz A number representing the frequency in Hz, between 40 and 1600
     */
    void set_pwm_freq(const double freq_hz);

    /** I2C file descriptor */
    int m_fd = -1;
};
} // hardware